{"version":3,"sources":["component/Header.js","component/Count.js","action/Count.js","component/Home.js","config/Axios.js","component/user/Register.js","component/user/Login.js","action/Account.js","component/admin/Header.js","action/Task.js","action/User.js","component/admin/AdminDashboard.js","component/admin/AdminTest.js","component/admin/TaskList.js","component/admin/Task.js","component/employee/Header.js","selectors/Task.js","component/admin/TaskView.js","component/admin/TaskCreate.js","component/employee/TaskList.js","component/employee/EmployeeDashboard.js","component/employee/TaskView.js","App.js","reducer/Count.js","reducer/Account.js","reducer/Task.js","reducer/User.js","index.js","store/configureStore.js"],"names":["Header","props","useState","isOpen","setIsOpen","Navbar","color","light","expand","NavbarBrand","href","NavbarToggler","onClick","Collapse","navbar","Nav","className","localStorage","getItem","NavItem","NavLink","Button","variant","clear","history","push","connect","state","count","dispatch","type","Home","axios","Axios","create","baseURL","console","log","initialValues","username","email","password","validationSchema","Yup","shape","required","onSubmit","values","post","then","response","data","user","errors","alert","catch","err","touched","handleChange","handleBlur","handleSubmit","Form","FormGroup","Label","for","Input","id","name","onChange","onBlur","value","token","setItem","role","startGetAccount","get","headers","account","payload","NavbarText","updateTask","startGetTasks","tasks","startGetUser","users","task","length","isEmpty","Spinner","filter","status","map","key","_id","AdminTest","total","active","completed","this","React","Component","TaskList","Table","striped","i","taskTitle","to","employees","findTask","match","params","taskView","Object","keys","taskBody","emp","employee","priority","put","TaskCreate","e","setState","target","preventDefault","formData","empl","handleSelect","priorityArr","htmlFor","placeholder","options","label","isMulti","closeMenuOnSelect","check","val","checked","PrivateRoute","checkAuth","component","rest","render","renderProps","App","path","exact","Count","UserRegister","UserLogin","AdminDashboard","Task","CreateTask","TaskView","EmployeeDashboard","countReducer","action","Number","accountInitialState","accountReducer","taskInitialState","taskReducer","userInitialState","userReducer","store","createStore","combineReducers","applyMiddleware","thunk","configureStore","subscribe","getState","jsx","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.5c552c83.chunk.js","sourcesContent":["import React, { useState, Fragment } from \"react\";\r\nimport {\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  Button,\r\n} from \"reactstrap\";\r\n\r\nconst Header = (props) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const toggle = () => setIsOpen(!isOpen);\r\n  const setRedirect = () => {\r\n    localStorage.clear();\r\n    props.history.push(\"/\");\r\n  };\r\n  return (\r\n    <div>\r\n      <Navbar color=\"light\" light expand=\"md\">\r\n        <NavbarBrand href=\"/\">Task Management</NavbarBrand>\r\n        <NavbarToggler onClick={toggle} />\r\n        <Collapse isOpen={isOpen} navbar>\r\n          <Nav className=\"mr-auto\" navbar>\r\n            {localStorage.getItem(\"authToken\") ? (\r\n              <Fragment>\r\n                <NavItem>\r\n                  <NavLink href=\"/\">Home</NavLink>\r\n                </NavItem>\r\n                <Button variant=\"outline-success\" onClick={setRedirect}>\r\n                  logout\r\n                </Button>\r\n              </Fragment>\r\n            ) : (\r\n              <Fragment>\r\n                <NavItem>\r\n                  <NavLink href=\"/\">Home</NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink href=\"/register\">Register</NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink href=\"/login\">Login</NavLink>\r\n                </NavItem>\r\n              </Fragment>\r\n            )}\r\n          </Nav>\r\n        </Collapse>\r\n      </Navbar>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { increment } from \"../action/Count\";\r\nfunction Count(props) {\r\n  const increments = () => {\r\n    props.dispatch(increment());\r\n  };\r\n  return (\r\n    <div>\r\n      <h4>Count - {props.count}</h4>\r\n      <button onClick={increments}>Click</button>\r\n    </div>\r\n  );\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    count: state.count,\r\n  };\r\n};\r\nexport default connect(mapStateToProps)(Count);\r\n","export const increment = () => {\r\n  return {\r\n    type: \"INCREMENT\",\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport Header from \"../component/Header\";\r\nfunction Home(props) {\r\n  return (\r\n    <div>\r\n      <Header {...props} />\r\n      <h1>Task Management Application</h1>\r\n    </div>\r\n  );\r\n}\r\nexport default Home;\r\n","import Axios from \"axios\";\r\nconst axios = Axios.create({\r\n  baseURL:\r\n    process.env.NODE_ENV === \"production\"\r\n      ? \"https://kp-app.herokuapp.com\"\r\n      : \"http://localhost:4000\",\r\n});\r\nexport default axios;\r\n","import React from \"react\";\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { connect } from \"react-redux\";\r\nimport axios from \"../../config/Axios\";\r\nimport { Button, Form, FormGroup, Label, Input } from \"reactstrap\";\r\nimport Header from \"../Header\";\r\nimport \"../../App.css\";\r\n\r\nfunction UserRegister(props) {\r\n  console.log(\"register - \", props);\r\n  return (\r\n    <div>\r\n      <Header {...props} />\r\n      <div className=\"container-fluid p-0\">\r\n        <div className=\"background_img\">\r\n          <div className=\"layer\">\r\n            <div className=\"container\">\r\n              <div className=\"row\">\r\n                <div className=\"offset-8 col-md-4\">\r\n                  <div className=\"register_background\">\r\n                    <Formik\r\n                      initialValues={{ username: \"\", email: \"\", password: \"\" }}\r\n                      validationSchema={Yup.object().shape({\r\n                        username: Yup.string().required(\"Username is required\"),\r\n                        email: Yup.string()\r\n                          .email(\"email is invalid\")\r\n                          .required(\"email is required\"),\r\n                        password: Yup.string().required(\"Password is required\"),\r\n                      })}\r\n                      onSubmit={(values) => {\r\n                        axios\r\n                          .post(\"/users/register\", values)\r\n                          .then((response) => {\r\n                            const { user, errors } = response.data;\r\n                            if (user) {\r\n                              props.history.push(\"/login\");\r\n                            } else {\r\n                              alert(\"Error\");\r\n                            }\r\n                          })\r\n                          .catch((err) => {\r\n                            console.log(err);\r\n                          });\r\n                      }}\r\n                    >\r\n                      {({\r\n                        values,\r\n                        errors,\r\n                        touched,\r\n                        handleChange,\r\n                        handleBlur,\r\n                        handleSubmit,\r\n                      }) => (\r\n                        <Form onSubmit={handleSubmit}>\r\n                          <FormGroup>\r\n                            <Label for=\"username\">Username</Label>\r\n                            <Input\r\n                              type=\"text\"\r\n                              id=\"username\"\r\n                              name=\"username\"\r\n                              onChange={handleChange}\r\n                              onBlur={handleBlur}\r\n                              value={values.username}\r\n                            />\r\n                            <div className=\"errors\">\r\n                              {errors.username &&\r\n                                touched.username &&\r\n                                errors.username}\r\n                            </div>\r\n                          </FormGroup>\r\n                          <FormGroup>\r\n                            <Label for=\"email\">Email</Label>\r\n                            <Input\r\n                              type=\"email\"\r\n                              id=\"email\"\r\n                              name=\"email\"\r\n                              onChange={handleChange}\r\n                              onBlur={handleBlur}\r\n                              value={values.email}\r\n                            />\r\n                            <div className=\"errors\">\r\n                              {errors.email && touched.email && errors.email}\r\n                            </div>\r\n                          </FormGroup>\r\n                          <FormGroup>\r\n                            <Label for=\"password\">Password</Label>\r\n                            <Input\r\n                              type=\"password\"\r\n                              id=\"password\"\r\n                              name=\"password\"\r\n                              onChange={handleChange}\r\n                              onBlur={handleBlur}\r\n                              value={values.password}\r\n                            />\r\n                            <div className=\"errors\">\r\n                              {errors.password &&\r\n                                touched.password &&\r\n                                errors.password}\r\n                            </div>\r\n                          </FormGroup>\r\n                          <Button type=\"submit\">Submit</Button>\r\n                        </Form>\r\n                      )}\r\n                    </Formik>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default connect()(UserRegister);\r\n","import React from \"react\";\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { connect } from \"react-redux\";\r\nimport axios from \"../../config/Axios\";\r\nimport { Button, Form, FormGroup, Label, Input } from \"reactstrap\";\r\nimport Header from \"../Header\";\r\nimport \"../../App.css\";\r\n\r\nfunction UserLogin(props) {\r\n  console.log(\"Login - \", props);\r\n  return (\r\n    <div>\r\n      <Header {...props} />\r\n      <div className=\"container-fluid p-0\">\r\n        <div className=\"background_img\">\r\n          <div className=\"layer\">\r\n            <div className=\"container\">\r\n              <div className=\"row\">\r\n                <div className=\"offset-8 col-md-4\">\r\n                  <div className=\"login_background\">\r\n                    <Formik\r\n                      initialValues={{ email: \"\", password: \"\" }}\r\n                      validationSchema={Yup.object().shape({\r\n                        email: Yup.string()\r\n                          .email(\"email is invalid\")\r\n                          .required(\"email is required\"),\r\n                        password: Yup.string().required(\"Password is required\"),\r\n                      })}\r\n                      onSubmit={(values) => {\r\n                        axios\r\n                          .post(\"/users/login\", values)\r\n                          .then((response) => {\r\n                            if (response.data.token) {\r\n                              const { token, user } = response.data;\r\n                              localStorage.setItem(\"authToken\", token);\r\n                              if (user.role == \"admin\") {\r\n                                props.history.push(\"/admin\");\r\n                              } else {\r\n                                props.history.push(\"/employee\");\r\n                              }\r\n                            }\r\n                            //   const { user, errors } = response.data;\r\n                            //   if (user) {\r\n                            //     alert(\"success\");\r\n                            //   } else {\r\n                            //     alert(\"Error\");\r\n                            //   }\r\n                          })\r\n                          .catch((err) => {\r\n                            console.log(err);\r\n                          });\r\n                      }}\r\n                    >\r\n                      {({\r\n                        values,\r\n                        errors,\r\n                        touched,\r\n                        handleChange,\r\n                        handleBlur,\r\n                        handleSubmit,\r\n                      }) => (\r\n                        <Form onSubmit={handleSubmit}>\r\n                          <FormGroup>\r\n                            <Label for=\"email\">Email</Label>\r\n                            <Input\r\n                              type=\"email\"\r\n                              id=\"email\"\r\n                              name=\"email\"\r\n                              onChange={handleChange}\r\n                              onBlur={handleBlur}\r\n                              value={values.email}\r\n                            />\r\n                            <div className=\"errors\">\r\n                              {errors.email && touched.email && errors.email}\r\n                            </div>\r\n                          </FormGroup>\r\n                          <FormGroup>\r\n                            <Label for=\"password\">Password</Label>\r\n                            <Input\r\n                              type=\"password\"\r\n                              id=\"password\"\r\n                              name=\"password\"\r\n                              onChange={handleChange}\r\n                              onBlur={handleBlur}\r\n                              value={values.password}\r\n                            />\r\n                            <div className=\"errors\">\r\n                              {errors.password &&\r\n                                touched.password &&\r\n                                errors.password}\r\n                            </div>\r\n                          </FormGroup>\r\n\r\n                          <Button type=\"submit\">Submit</Button>\r\n                        </Form>\r\n                      )}\r\n                    </Formik>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    account: state.account,\r\n  };\r\n};\r\nexport default connect()(UserLogin);\r\n","import axios from \"../config/Axios\";\r\nexport const setAccount = (data) => {\r\n  return {\r\n    type: \"SET_ACCOUNT\",\r\n    payload: data,\r\n  };\r\n};\r\nexport const startGetAccount = () => {\r\n  return (dispatch) => {\r\n    axios\r\n      .get(\"/users/account\", {\r\n        headers: {\r\n          \"x-auth\": localStorage.getItem(\"authToken\"),\r\n        },\r\n      })\r\n      .then((response) => {\r\n        const account = response.data;\r\n        dispatch(setAccount(account));\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n};\r\n","import React, { useState, Fragment } from \"react\";\r\nimport {\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  NavbarText,\r\n  Button,\r\n} from \"reactstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport { startGetAccount } from \"../../action/Account\";\r\nconst Header = (props) => {\r\n  props.dispatch(startGetAccount());\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const toggle = () => setIsOpen(!isOpen);\r\n  const setRedirect = () => {\r\n    localStorage.clear();\r\n    props.history.push(\"/\");\r\n  };\r\n  return (\r\n    <div>\r\n      <Navbar color=\"light\" light expand=\"md\">\r\n        <NavbarBrand href=\"/\">Task Management</NavbarBrand>\r\n        <NavbarToggler onClick={toggle} />\r\n        <Collapse isOpen={isOpen} navbar>\r\n          <Nav className=\"mr-auto\" navbar>\r\n            <Fragment>\r\n              <NavItem>\r\n                <NavLink href=\"/admin\">Home</NavLink>\r\n              </NavItem>\r\n              <NavItem>\r\n                <NavLink href=\"/task\">Tasks</NavLink>\r\n              </NavItem>\r\n              <NavItem>\r\n                <NavLink href=\"/task/create\">Post Tasks</NavLink>\r\n              </NavItem>\r\n              <Button variant=\"outline-success\" onClick={setRedirect}>\r\n                logout\r\n              </Button>\r\n            </Fragment>\r\n          </Nav>\r\n          <NavbarText>{props.account && props.account.username}</NavbarText>\r\n        </Collapse>\r\n      </Navbar>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    account: state.account,\r\n  };\r\n};\r\nexport default connect(mapStateToProps)(Header);\r\n","import axios from \"../config/Axios\";\r\nexport const getTasks = (data) => {\r\n  return {\r\n    type: \"GET_TASKS\",\r\n    payload: data,\r\n  };\r\n};\r\nexport const addTask = (data) => {\r\n  return {\r\n    type: \"ADD_TASK\",\r\n    payload: data,\r\n  };\r\n};\r\nexport const updateTask = (data) => {\r\n  return {\r\n    type: \"UPDATE_TASK\",\r\n    payload: data,\r\n  };\r\n};\r\nexport const startGetTasks = () => {\r\n  return (dispatch) => {\r\n    axios\r\n      .get(\"/tasks/list\", {\r\n        headers: {\r\n          \"x-auth\": localStorage.getItem(\"authToken\"),\r\n        },\r\n      })\r\n      .then((response) => {\r\n        const tasks = response.data;\r\n        dispatch(getTasks(tasks));\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n};\r\n","import axios from \"../config/Axios\";\r\nexport const getUser = (data) => {\r\n  return {\r\n    type: \"GET_USER\",\r\n    payload: data,\r\n  };\r\n};\r\nexport const startGetUser = () => {\r\n  return (dispatch) => {\r\n    axios\r\n      .get(\"/users/list\", {\r\n        headers: {\r\n          \"x-auth\": localStorage.getItem(\"authToken\"),\r\n        },\r\n      })\r\n      .then((response) => {\r\n        const users = response.data;\r\n        dispatch(getUser(users));\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport Header from \"./Header\";\r\nimport { connect } from \"react-redux\";\r\nimport isEmpty from \"lodash/isEmpty\";\r\nimport \"../../App.css\";\r\nimport { startGetTasks } from \"../../action/Task\";\r\nimport { startGetUser } from \"../../action/User\";\r\nimport { Spinner } from \"reactstrap\";\r\nfunction AdminDashboard(props) {\r\n  props.dispatch(startGetUser());\r\n  if (props.task.length == 0) {\r\n    props.dispatch(startGetTasks());\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Header {...props} />\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-3\">\r\n            <div className=\"admin_cards\">\r\n              <h3>Total Employees</h3>\r\n              <h5>\r\n                {!isEmpty(props.user) ? (\r\n                  props.user.length\r\n                ) : (\r\n                  <Spinner color=\"success\" />\r\n                )}\r\n              </h5>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-md-3\">\r\n            <div className=\"admin_cards\">\r\n              <h3>Total Tasks</h3>\r\n              <h5>\r\n                {!isEmpty(props.task) ? (\r\n                  props.task.length\r\n                ) : (\r\n                  <Spinner color=\"success\" />\r\n                )}\r\n              </h5>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-md-3\">\r\n            <div className=\"admin_cards\">\r\n              <h3>Active Tasks</h3>\r\n              <h5>\r\n                {!isEmpty(props.task) ? (\r\n                  props.task.filter((task) => task.status == true).length\r\n                ) : (\r\n                  <Spinner color=\"success\" />\r\n                )}\r\n              </h5>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-md-3\">\r\n            <div className=\"admin_cards\">\r\n              <h3>Completed Tasks</h3>\r\n              <h5>\r\n                {!isEmpty(props.task) ? (\r\n                  props.task.filter((task) => task.status == false).length\r\n                ) : (\r\n                  <Spinner color=\"success\" />\r\n                )}\r\n              </h5>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* <div className=\"col-md-6\"> */}\r\n        <div>\r\n          {!isEmpty(props.user) && (\r\n            <div>\r\n              {/* <h1>Total Employees - {props.user.length}</h1> */}\r\n              {props.user.map((user) => {\r\n                return <h3 key={user._id}>{user.username}</h3>;\r\n              })}\r\n            </div>\r\n          )}\r\n        </div>\r\n        {/* </div> */}\r\n        {/* </div> */}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    user: state.user,\r\n    task: state.task,\r\n  };\r\n};\r\nexport default connect(mapStateToProps)(AdminDashboard);\r\n","import React from \"react\";\r\nimport Header from \"./Header\";\r\nimport { connect } from \"react-redux\";\r\nimport isEmpty from \"lodash/isEmpty\";\r\nimport \"../../App.css\";\r\nimport { startGetTasks } from \"../../action/Task\";\r\nimport { startGetUser } from \"../../action/User\";\r\nimport { Spinner } from \"reactstrap\";\r\nclass AdminTest extends React.Component {\r\n  constructor(props) {\r\n    super();\r\n    this.state = {\r\n      total: [],\r\n      active: [],\r\n      completed: [],\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.props.dispatch(startGetUser());\r\n    // this.props.dispatch(startGetTasks());\r\n    if (this.props.task.length == 0) {\r\n      this.props.dispatch(startGetTasks());\r\n    }\r\n    console.log(\"task props - \", this.props.task);\r\n    // this.setState({\r\n    //   total: this.props.task && this.props.task,\r\n    //   active:\r\n    //     this.props.task &&\r\n    //     this.props.task.filter((task) => task.status == true),\r\n    //   completed:\r\n    //     this.props.task &&\r\n    //     this.props.task.filter((task) => task.status == false),\r\n    // });\r\n  }\r\n  render() {\r\n    // console.log(\"state - \", this.state);\r\n    return (\r\n      <div>\r\n        <Header {...this.props} />\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-3\">\r\n              <div className=\"admin_cards\">\r\n                <h3>Total Employees</h3>\r\n                <h5>\r\n                  {\" \"}\r\n                  {!isEmpty(this.props.user) ? (\r\n                    this.props.user.length\r\n                  ) : (\r\n                    <Spinner color=\"success\" />\r\n                  )}\r\n                </h5>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md-3\">\r\n              <div className=\"admin_cards\">\r\n                <h3>Total Employees</h3>\r\n                <h5>\r\n                  {\" \"}\r\n                  {!isEmpty(this.state.task) ? (\r\n                    this.state.task.length\r\n                  ) : (\r\n                    <Spinner color=\"success\" />\r\n                  )}\r\n                </h5>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md-6\">\r\n              {!isEmpty(this.props.user) && (\r\n                <div>\r\n                  {/* <h1>Total Employees - {this.props.user.length}</h1> */}\r\n                  {this.props.user.map((user) => {\r\n                    return <h3 key={user._id}>{user.username}</h3>;\r\n                  })}\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    user: state.user,\r\n    task: state.task,\r\n  };\r\n};\r\nexport default connect(mapStateToProps)(AdminTest);\r\n","import React from \"react\";\r\nimport { Table } from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction TaskList(props) {\r\n  console.log(\"table - \", props);\r\n  return (\r\n    <div>\r\n      <Table striped>\r\n        <thead>\r\n          <tr>\r\n            <th>#</th>\r\n            <th>Title</th>\r\n            <th>View</th>\r\n            <th>Total Employess</th>\r\n            <th>Status</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {props.data.map((data, i) => {\r\n            return (\r\n              <tr key={data._id}>\r\n                <td>{i + 1}</td>\r\n                <td>{data.taskTitle}</td>\r\n                <td>\r\n                  <Link to={`/task/${data._id}`}>View</Link>\r\n                </td>\r\n                <td>{data.employees.length}</td>\r\n                <td>{data.status ? \"In Progess\" : \"Completed\"}</td>\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </Table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TaskList;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport TaskList from \"./TaskList\";\r\nimport Header from \"./Header\";\r\nimport { Link } from \"react-router-dom\";\r\nfunction Task(props) {\r\n  console.log(\"task - \", props);\r\n  return (\r\n    <div>\r\n      <Header {...props} />\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"offset-2 col-md-8\">\r\n            <TaskList data={props.task} />\r\n            <Link to=\"/task/create\">Create Task</Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    task: state.task,\r\n  };\r\n};\r\nexport default connect(mapStateToProps)(Task);\r\n","import React, { useState, Fragment } from \"react\";\r\nimport {\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  NavbarText,\r\n  Button,\r\n} from \"reactstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport { startGetAccount } from \"../../action/Account\";\r\nconst EmployeeHeader = (props) => {\r\n  props.dispatch(startGetAccount());\r\n  console.log(\"header - \", props);\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const toggle = () => setIsOpen(!isOpen);\r\n  const setRedirect = () => {\r\n    localStorage.clear();\r\n    props.history.push(\"/\");\r\n  };\r\n  return (\r\n    <div>\r\n      <Navbar color=\"light\" light expand=\"md\">\r\n        <NavbarBrand href=\"/\">Task Management</NavbarBrand>\r\n        <NavbarToggler onClick={toggle} />\r\n        <Collapse isOpen={isOpen} navbar>\r\n          <Nav className=\"mr-auto\" navbar>\r\n            <Fragment>\r\n              <NavItem>\r\n                <NavLink href=\"/employee\">Home</NavLink>\r\n              </NavItem>\r\n              <Button variant=\"outline-success\" onClick={setRedirect}>\r\n                logout\r\n              </Button>\r\n            </Fragment>\r\n          </Nav>\r\n          <NavbarText>{props.account && props.account.username}</NavbarText>\r\n        </Collapse>\r\n      </Navbar>\r\n    </div>\r\n  );\r\n};\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    account: state.account,\r\n  };\r\n};\r\nexport default connect(mapStateToProps)(EmployeeHeader);\r\n","export const findTask = (tasks, id) => {\r\n  return tasks.filter((task) => task._id == id);\r\n};\r\n","import React from \"react\";\r\nimport Header from \"./Header\";\r\nimport EmployeeHeader from \"../employee/Header\";\r\nimport { connect } from \"react-redux\";\r\nimport { findTask } from \"../../selectors/Task\";\r\nimport isEmpty from \"lodash/isEmpty\";\r\nimport axios from \"../../config/Axios\";\r\nimport { updateTask } from \"../../action/Task\";\r\nimport { startGetAccount } from \"../../action/Account\";\r\nimport { startGetTasks } from \"../../action/Task\";\r\nfunction TaskView(props) {\r\n  console.log(\"task - \", props);\r\n  props.dispatch(startGetTasks());\r\n  if (Object.keys(props.account).length == 0) {\r\n    props.dispatch(startGetAccount());\r\n  }\r\n  const updateStatus = (id) => {\r\n    axios\r\n      .put(\r\n        `/tasks/${id}`,\r\n        { status: false },\r\n        {\r\n          headers: {\r\n            \"x-auth\": localStorage.getItem(\"authToken\"),\r\n          },\r\n        }\r\n      )\r\n      .then((response) => {\r\n        props.dispatch(updateTask(response.data));\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n  return (\r\n    <div>\r\n      {props.account.role == \"admin\" ? (\r\n        <Header {...props} />\r\n      ) : (\r\n        <EmployeeHeader {...props} />\r\n      )}\r\n      {!isEmpty(props.taskView) && (\r\n        <div>\r\n          <h1>Title : {props.taskView[0].taskTitle}</h1>\r\n          <p>\r\n            <b>Description : </b>\r\n            {props.taskView[0].taskBody}\r\n          </p>\r\n          <h4>{props.taskView[0].status ? \"In Progress\" : \"Completed\"}</h4>\r\n          <h3>Employess Working this project</h3>\r\n          <ul>\r\n            {props.taskView[0].employees.map((emp) => {\r\n              return <li key={emp.employee._id}>{emp.employee.username}</li>;\r\n            })}\r\n          </ul>\r\n          <p>{props.taskView[0].priority}</p>\r\n          {props.account.role == \"employee\"\r\n            ? props.taskView[0].status && (\r\n                <button\r\n                  onClick={() => {\r\n                    updateStatus(props.taskView[0]._id);\r\n                  }}\r\n                >\r\n                  Finish\r\n                </button>\r\n              )\r\n            : \"\"}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\nconst mapStateToProps = (state, props) => {\r\n  const id = props.match.params.id;\r\n  return {\r\n    taskView: findTask(state.task, id),\r\n    account: state.account,\r\n  };\r\n};\r\nexport default connect(mapStateToProps)(TaskView);\r\n","import React from \"react\";\r\nimport { Button, Form, FormGroup, Label, Input, FormText } from \"reactstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport Select from \"react-select\";\r\nimport axios from \"../../config/Axios\";\r\nimport { addTask } from \"../../action/Task\";\r\nimport Header from \"./Header\";\r\nclass TaskCreate extends React.Component {\r\n  constructor(props) {\r\n    super();\r\n    this.state = {\r\n      taskTitle: \"\",\r\n      taskBody: \"\",\r\n      employees: \"\",\r\n      priorityArr: [\"High\", \"Medium\", \"Low\"],\r\n      priority: \"\",\r\n    };\r\n  }\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const { taskTitle, taskBody, employees, priority } = this.state;\r\n    const formData = {\r\n      taskTitle,\r\n      taskBody,\r\n      employees:\r\n        employees && employees.map((empl) => ({ employee: empl.value })),\r\n      priority,\r\n    };\r\n    axios\r\n      .post(\"/tasks/create\", formData, {\r\n        headers: {\r\n          \"x-auth\": localStorage.getItem(\"authToken\"),\r\n        },\r\n      })\r\n      .then((response) => {\r\n        const { errors, tasks } = response.data;\r\n        if (tasks) {\r\n          this.props.dispatch(addTask(tasks));\r\n          this.props.history.push(\"/task\");\r\n        } else if (errors) {\r\n          alert(\"fill all the details\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n  handleSelect = (employees) => {\r\n    this.setState({ employees });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Header {...this.props} />\r\n        <h1 className=\"text-center\">Create Task</h1>\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-3\"></div>\r\n            <div className=\"col-md-6\">\r\n              <div className=\"form-background\">\r\n                <Form onSubmit={this.handleSubmit}>\r\n                  <FormGroup>\r\n                    <Label htmlFor=\"taskTitle\">Task Title</Label>\r\n                    <Input\r\n                      type=\"text\"\r\n                      name=\"taskTitle\"\r\n                      id=\"taskTitle\"\r\n                      value={this.state.taskTitle}\r\n                      placeholder=\"Task Title\"\r\n                      onChange={this.handleChange}\r\n                    />\r\n                  </FormGroup>\r\n                  <FormGroup>\r\n                    <Label for=\"taskBody\">Task Description</Label>\r\n                    <Input\r\n                      type=\"textarea\"\r\n                      name=\"taskBody\"\r\n                      id=\"taskBody\"\r\n                      value={this.state.taskBody}\r\n                      placeholder=\"Task Description\"\r\n                      onChange={this.handleChange}\r\n                    />\r\n                  </FormGroup>\r\n                  <FormGroup>\r\n                    <Label htmlFor=\"employees\">Assign Task</Label>\r\n                    <Select\r\n                      // options={this.props.employees1.map(employee => ({ value: employee._id, label: employee.name }))}\r\n                      options={this.props.user.map((user) => ({\r\n                        value: user._id,\r\n                        label: user.username,\r\n                      }))}\r\n                      onChange={this.handleSelect}\r\n                      isMulti\r\n                      closeMenuOnSelect={false}\r\n                      placeholder=\"Choose Categories\"\r\n                    />\r\n                  </FormGroup>\r\n                  <FormGroup check>\r\n                    <Label htmlFor=\"employees\">Task Priority</Label>\r\n                    {this.state.priorityArr.map((val, i) => {\r\n                      return (\r\n                        <div key={i}>\r\n                          <Input\r\n                            type=\"radio\"\r\n                            name=\"priority\"\r\n                            value={val}\r\n                            onChange={this.handleChange}\r\n                            checked={this.state.priority == val}\r\n                          />\r\n                          {val}\r\n                        </div>\r\n                      );\r\n                    })}\r\n                  </FormGroup>\r\n                  <FormGroup>\r\n                    <Input type=\"submit\" value=\"Submit\" />\r\n                  </FormGroup>\r\n                </Form>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md-3\"></div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    user: state.user,\r\n  };\r\n};\r\nexport default connect(mapStateToProps)(TaskCreate);\r\n","import React from \"react\";\r\nimport { Table } from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction TaskList(props) {\r\n  console.log(\"table - \", props);\r\n  return (\r\n    <Table striped>\r\n      <thead>\r\n        <tr>\r\n          <th>#</th>\r\n          <th>Title</th>\r\n          <th>View</th>\r\n          <th>Total Employess</th>\r\n          <th>Status</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {props.data.map((data, i) => {\r\n          return (\r\n            <tr key={data._id}>\r\n              <td>{i + 1}</td>\r\n              <td>{data.taskTitle}</td>\r\n              <td>\r\n                <Link to={`/task/${data._id}`}>View</Link>\r\n              </td>\r\n              <td>{data.employees.length}</td>\r\n              <td>{data.status ? \"In Progess\" : \"Completed\"}</td>\r\n            </tr>\r\n          );\r\n        })}\r\n      </tbody>\r\n    </Table>\r\n  );\r\n}\r\n\r\nexport default TaskList;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport TaskList from \"./TaskList\";\r\nimport EmployeeHeader from \"./Header\";\r\nimport { startGetTasks } from \"../../action/Task\";\r\nfunction EmployeeDashboard(props) {\r\n  console.log(\"employee - \", props);\r\n  if (props.task.length == 0) {\r\n    props.dispatch(startGetTasks());\r\n  }\r\n  return (\r\n    <div>\r\n      <EmployeeHeader {...props} />\r\n      {props.task && (\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"offset-2 col-md-8\">\r\n              <TaskList data={props.task} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    task: state.task,\r\n  };\r\n};\r\nexport default connect(mapStateToProps)(EmployeeDashboard);\r\n","import React from \"react\";\r\nimport EmployeeHeader from \"./Header\";\r\nimport { connect } from \"react-redux\";\r\nimport { findTask } from \"../../selectors/Task\";\r\nimport { updateTask } from \"../../action/Task\";\r\nimport isEmpty from \"lodash/isEmpty\";\r\nimport axios from \"../../config/Axios\";\r\nfunction EmployeeTaskView(props) {\r\n  console.log(\"task - \", props);\r\n  const updateStatus = (id) => {\r\n    axios\r\n      .put(\r\n        `/tasks/${id}`,\r\n        { status: false },\r\n        {\r\n          headers: {\r\n            \"x-auth\": localStorage.getItem(\"authToken\"),\r\n          },\r\n        }\r\n      )\r\n      .then((response) => {\r\n        props.dispatch(updateTask(response.data));\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n  return (\r\n    <div>\r\n      <EmployeeHeader />\r\n      {!isEmpty(props.taskView) && (\r\n        <div>\r\n          <h1>Title : {props.taskView[0].taskTitle}</h1>\r\n          <p>\r\n            <b>Description : </b>\r\n            {props.taskView[0].taskBody}\r\n          </p>\r\n          <h4>{props.taskView[0].status ? \"In Progress\" : \"Completed\"}</h4>\r\n          <h3>Employess Working this project</h3>\r\n          <ul>\r\n            {props.taskView[0].employees.map((emp) => {\r\n              return <li key={emp.employee._id}>{emp.employee.username}</li>;\r\n            })}\r\n          </ul>\r\n          <p>{props.taskView[0].priority}</p>\r\n          {props.taskView[0].status && (\r\n            <button\r\n              onClick={() => {\r\n                updateStatus(props.taskView[0]._id);\r\n              }}\r\n            >\r\n              Finish\r\n            </button>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\nconst mapStateToProps = (state, props) => {\r\n  const id = props.match.params.id;\r\n  return {\r\n    taskView: findTask(state.task, id),\r\n    account : state.account\r\n  };\r\n};\r\nexport default connect(mapStateToProps)(EmployeeTaskView);\r\n","import React from \"react\";\nimport \"./App.css\";\nimport { BrowserRouter, Link, Route, Switch, Redirect } from \"react-router-dom\";\nimport Header from \"./component/Header\";\nimport Count from \"./component/Count\";\nimport Home from \"./component/Home\";\nimport UserRegister from \"./component/user/Register\";\nimport UserLogin from \"./component/user/Login\";\nimport AdminDashboard from \"./component/admin/AdminDashboard\";\nimport AdminTest from \"./component/admin/AdminTest\";\nimport Task from \"./component/admin/Task\";\nimport TaskView from \"./component/admin/TaskView\";\nimport CreateTask from \"./component/admin/TaskCreate\";\nimport EmployeeDashboard from \"./component/employee/EmployeeDashboard\";\nimport EmployeeTaskView from \"./component/employee/TaskView\";\nfunction App() {\n  return (\n    <div>\n      <BrowserRouter>\n        <Switch>\n          <Route path=\"/\" component={Home} exact={true} />\n          <Route path=\"/count\" component={Count} />\n          <Route path=\"/register\" component={UserRegister} />\n          <Route path=\"/login\" component={UserLogin} />\n\n          <PrivateRoute path=\"/admin\" component={AdminDashboard} />\n          <PrivateRoute path=\"/task\" component={Task} exact={true} />\n          <PrivateRoute path=\"/task/create\" component={CreateTask} />\n          <PrivateRoute path=\"/task/:id\" component={TaskView} exact={true} />\n\n          <PrivateRoute\n            path=\"/employee\"\n            component={EmployeeDashboard}\n            exact={true}\n          />\n          {/* <PrivateRoute path=\"/task/:id\" component={EmployeeTaskView} /> */}\n        </Switch>\n      </BrowserRouter>\n    </div>\n  );\n}\nconst PrivateRoute = (props) => {\n  const checkAuth = localStorage.getItem(\"authToken\");\n  const { component: Component, ...rest } = props;\n  return checkAuth ? (\n    <Route {...rest} render={(renderProps) => <Component {...renderProps} />} />\n  ) : (\n    <Redirect to=\"/login\" />\n  );\n};\n\nexport default App;\n","const countInitialState = \"\";\r\nconst countReducer = (state = countInitialState, action) => {\r\n  switch (action.type) {\r\n    case \"INCREMENT\": {\r\n      return Number(state) + 1;\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\nexport default countReducer;\r\n","const accountInitialState = {};\r\nconst accountReducer = (state = accountInitialState, action) => {\r\n  switch (action.type) {\r\n    case \"SET_ACCOUNT\": {\r\n      return action.payload;\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\nexport default accountReducer;\r\n","const taskInitialState = [];\r\nconst taskReducer = (state = taskInitialState, action) => {\r\n  switch (action.type) {\r\n    case \"GET_TASKS\": {\r\n      return [...action.payload];\r\n    }\r\n    case \"ADD_TASK\": {\r\n      return [...state, action.payload];\r\n    }\r\n    case \"UPDATE_TASK\": {\r\n      return state.map((task) => {\r\n        if (task._id == action.payload._id) {\r\n          return action.payload;\r\n        }\r\n        return task;\r\n      });\r\n    }\r\n    default: {\r\n      return [...state];\r\n    }\r\n  }\r\n};\r\nexport default taskReducer;\r\n","const userInitialState = [];\r\nconst userReducer = (state = userInitialState, action) => {\r\n  switch (action.type) {\r\n    case \"GET_USER\": {\r\n      return [...action.payload];\r\n    }\r\n    default: {\r\n      return [...state];\r\n    }\r\n  }\r\n};\r\nexport default userReducer;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Provider } from \"react-redux\";\nimport configureStore from \"./store/configureStore\";\nimport { startGetAccount } from \"./action/Account\";\nimport { startGetTasks } from \"./action/Task\";\nimport { startGetUser } from \"./action/User\";\nconst store = configureStore();\nstore.subscribe(() => {\n  console.log(store.getState());\n});\nstore.dispatch(startGetAccount());\nstore.dispatch(startGetTasks());\nstore.dispatch(startGetUser());\nconst jsx = (\n  <Provider store={store}>\n    <App />\n  </Provider>\n);\nReactDOM.render(jsx, document.getElementById(\"root\"));\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport countReducer from \"../reducer/Count\";\r\nimport accountReducer from \"../reducer/Account\";\r\nimport taskReducer from \"../reducer/Task\";\r\nimport userReducer from \"../reducer/User\";\r\nconst configureStore = () => {\r\n  const store = createStore(\r\n    combineReducers({\r\n      count: countReducer,\r\n      account: accountReducer,\r\n      task: taskReducer,\r\n      user: userReducer,\r\n    }),\r\n    applyMiddleware(thunk)\r\n  );\r\n  return store;\r\n};\r\nexport default configureStore;\r\n"],"sourceRoot":""}